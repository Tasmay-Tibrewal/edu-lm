[
  {
    "video_name": "YouTube Video (JgDNFQ2RaLQ)",
    "video_id": 0,
    "video_info_available": 1,
    "video_content": [
      {
        "video_timestamp_num": 0,
        "timestamp_start": "00:00:00",
        "timestamp_end": "00:00:12",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "(Upbeat music begins with a slight synth intro)\\nYour glowing\\nYou color and fracture the light\\nYou can't help but shine"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The video opens with the word **'SAPPHIRE'** in vibrant pink, painted across a blue sky with soft white clouds, as the music begins to swell. This quickly transitions to a wide shot of the sky, before cutting to a close-up of **Ed Sheeran** on a rooftop at sunset, looking up and then out at the city landscape. He has his signature ginger hair and is wearing a black t-shirt. The golden hour light bathes the scene, highlighting ancient-looking domes and structures in the background, suggesting an older part of a city. As the lyrics, 'Your glowing, you color and fracture the light, you can't help but shine' are sung, Ed Sheeran gazes around with an expression of awe and contentment, taking in the beauty of his surroundings. The camera moves around him, showing more of the bustling city rooftops under the warm, fading light, setting a serene yet evocative tone for the video."
        }
      },
      {
        "video_timestamp_num": 1,
        "timestamp_start": "00:00:12",
        "timestamp_end": "00:00:33",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "And I know that\\nYou carry the world on your back\\nBut look at you tonight\\nThe lights\\nYour face\\nYour eyes\\nExploding like fireworks in the sky"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The scene rapidly shifts, showcasing a montage of **Ed Sheeran's** experiences in India. He is first seen walking on a sandy beach at what appears to be sunrise or sunset, with waves gently lapping at the shore in the background. His body is covered in colorful tattoos, and he wears a silver necklace. The camera then cuts to him smiling while on a boat or ferry, sunglasses on, enjoying the calm waters of a wide river during golden hour. The reflection of the sun shimmers on the water's surface. Next, he's walking through a bustling street market, full of vibrant fabrics and goods, smiling and looking around, still wearing his sunglasses and a white t-shirt. The architecture suggests a South Asian setting, with overhead metro lines and crowded pathways. He's then seen walking with a group of local young men, smiling brightly, indicating a friendly interaction. The subsequent shots show him walking through a narrower, somewhat darker alleyway, still with sunglasses, and then at night on a street lit by festive, twinkling lights, observing the lively surroundings. He then appears on a bridge over a gorge, wearing a green cap and a plaid shirt, before returning to a vibrant marketplace, engaging with a local vendor. The sequence culminates with Ed Sheeran, back on a bustling street, smiling at someone off-camera. The rapid cuts and varied locations highlight the dynamic and immersive nature of his journey, all set against the backdrop of the song's reflective lyrics about inner light."
        }
      },
      {
        "video_timestamp_num": 2,
        "timestamp_start": "00:00:33",
        "timestamp_end": "00:00:54",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "Tum jo unki body\\nWhile you're pushing on me\\nDon't you win the party\\nI could do this all week\\nWe'll be dancing 'til the morning\\nGo to bed, we won't sleep\\nCham cham cham cham ke sitare wargi\\n(Translation: Like the twinkling stars)\\nLook what we found"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The video transitions into the lively chorus, with **Ed Sheeran** dancing energetically in a brightly lit cafe or restaurant called 'Cafe Sunrise,' surrounded by a diverse group of locals who are also dancing and smiling. The atmosphere is joyous and vibrant. Following this, he's back on the river, sunglasses on, looking content. In a surprising turn, Ed Sheeran is then seen in a chef's hat and apron in a bustling professional kitchen, smiling and interacting with other chefs, showing a playful side. The scene shifts again to him riding in a yellow taxi, looking relaxed and happy, with the city passing by. He is next seen striking a pose in front of a large golden statue of a king, making a funny face, then playfully hitting a large metal gong. A delightful moment shows him standing in front of a colorful framed artwork, while **Shah Rukh Khan** subtly emerges from behind him, placing his chin on Ed Sheeran's head, both sharing a laugh. This cameo adds a touch of Bollywood magic. The subsequent shots show Ed Sheeran on a cricket field, exchanging high-fives with young boys dressed in white cricket attire, wearing a pink cricket jersey. He then rides in an auto-rickshaw at night, bathed in blue and green neon lights, before being seen on a swing in a park, smiling broadly with sunglasses and a green cap, enjoying the simple moments. This segment vividly captures the diverse and immersive experiences of Ed Sheeran, embracing different aspects of Indian culture and daily life."
        }
      },
      {
        "video_timestamp_num": 3,
        "timestamp_start": "00:00:54",
        "timestamp_end": "00:01:19",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "Come on, reach out\\nAnd to our hearts, come pull us to our feet now\\nYou know the truth is\\nWe could disappear anywhere\\nAs long as I got you there\\nWhen the sun dies\\nTill the day shines\\nWhen I'm with you\\nThere's not enough time\\nYou are my spring flower\\nWatching you bloom wild\\nWe are surrounded but I can only see\\n**The lights**\\n**Your face**\\n**Your eyes**\\n**Exploding like fireworks in the sky**"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "This segment continues the rapid visual storytelling, emphasizing the human connections made. **Ed Sheeran** is seen surrounded by a group of young children wearing pink soccer jerseys, all smiling and waving at the camera, highlighting a moment of joy and community. He then transitions to a studio setting, surrounded by people, smiling warmly at the camera. The background is adorned with colorful umbrellas hanging from the ceiling, creating a festive atmosphere. The scene shifts dramatically to a beach at sunset, where Ed Sheeran stands shirtless, covered in vibrant tattoos, illuminated by blue light as he looks up towards the sky, with waves crashing gently in the background. His expression is one of profound emotion and reverence. Following this, he's back in a taxi, then riding on a vibrant turquoise bus, looking out and smiling, sunglasses on, again engaging with people. He's also shown indoors at what looks like a pub or club, bathed in blue and green lights, smiling and laughing with the people around him. He reappears in the chef's hat, smiling. The video then shows him joyfully riding on the side of a yellow school bus, his arm extended, as it drives through a lush, green landscape, highlighting a sense of freedom and adventure. He's once more in the blue/green lit auto-rickshaw, then back in the cafe, singing and looking at the camera. The segment continues to reinforce the song's themes of light and inner brilliance, as reflected in the repeating lyrics 'The lights, your face, your eyes, exploding like fireworks in the sky.' His interactions with various groups of people underscore a sense of connection and shared happiness."
        }
      },
      {
        "video_timestamp_num": 4,
        "timestamp_start": "00:01:19",
        "timestamp_end": "00:03:03",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "The lights, your face, your eyes, exploding like fireworks in the sky\\nSay by\\nTum jo unki body\\nWhile you're pushing on me\\nDon't you win the party\\nI could do this all week\\nWe'll be dancing 'til the morning\\nGo to bed, we won't sleep\\nCham cham cham cham ke sitare wargi\\n(Translation: Like the twinkling stars)\\nSay by\\nTum jo unki body\\nWhile you're pushing on me\\nDon't you win the party\\nI could do this all week\\nWe'll be dancing 'til the morning\\nGo to bed, we won't sleep\\nCham cham cham cham ke sitare wargi\\n(Translation: Like the twinkling stars)\\nChalni banjaye\\nYour glowing\\nYou color and fracture the light\\nLook at you tonight\\nCham cham cham cham ke sitare wargi\\n(Translation: Like the twinkling stars)\\nTum jo unki body\\nWhile you're pushing on me\\nDon't you win the party\\nI could do this all week\\nWe'll be dancing 'til the morning\\nGo to bed, we won't sleep\\nCham cham cham cham ke sitare wargi\\n(Translation: Like the twinkling stars)\\nYour glowing\\nYou color and fracture the light\\nExploding like fireworks in the sky\\nCham cham cham cham ke sitare wargi\\n(Translation: Like the twinkling stars)\\nExploding like fireworks in the sky\\nSay by"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The final, extended segment is a vibrant recap and intensification of the video's journey. **Ed Sheeran** sings with gusto in a room filled with plants, accompanied by musicians playing Indian instruments, showcasing a blend of cultures. He then cheers loudly with a group of young people on a staircase, reinforcing the communal joy. He's seen again on the soccer field, surrounded by children in pink jerseys, all shouting in excitement. He's back in the lively cafe, dancing and laughing. The iconic moment with **Shah Rukh Khan** is repeated, highlighting their playful camaraderie. He's on the cricket field, getting high-fives from the children. More quick cuts show him riding on the auto-rickshaw, interacting with locals, and receiving a haircut outdoors while visibly wincing in a humorous way. He's on the swing again, and then back in the auto-rickshaw and cafe, with various lighting effects emphasizing the energetic mood. He shares a laugh with **Arijit Singh** on a boat and in a narrow alleyway, symbolizing collaboration and friendship. He's seen getting his hair done, then on the bus, and then on the swing, all with a happy, engaged expression. The video circles back to key moments: Ed Sheeran interacting with children in football jerseys, riding the bus, getting his haircut, riding the scooter with **King**, and drinking a lassi/milkshake. The visuals are punctuated by high-energy dancing in the cafe and pub, showcasing a celebratory atmosphere. He is seen pointing to the children in the stadium, indicating his appreciation for them. The video concludes with **Ed Sheeran** on a rooftop at night, surrounded by green laser lights, looking out at the city skyline, a final image of contemplation after a whirlwind journey. The energetic cuts and repeated motifs reinforce the joy of travel, cultural exchange, and human connection, perfectly aligning with the celebratory and uplifting tone of the song."
        }
      }
    ]
  },
  {
    "video_name": "YouTube Video (k0Ka-deab1s)",
    "video_id": 1,
    "video_info_available": 1,
    "video_content": [
      {
        "video_timestamp_num": 0,
        "timestamp_start": "00:00:00",
        "timestamp_end": "00:00:15",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "ਬਾਰਮਿੰਗਮ ਸ਼ਹਿਰ ਦੇ ਵਿੱਚ\\nIn the city of Birmingham\\nਵਿੱਚ ਪੰਜਾਬੀਆਂ ਦੇ ਵਿੱਚ\\nin the middle of a room full of Punjabis\\nAny guess ਕੌਣ ਆ ਸਕਦਾ ਐ?\\nAny guess who is about to come?\\nEd Sheeran ਆ ਗਿਆ ਓਏ!\\nEd Sheeran is in the house everyone! (Crowd cheers, excited)"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The video opens in a dimly lit concert arena, focusing on Diljit Dosanjh, adorned in an all-white ensemble, including a white turban and gloves, standing center stage with a microphone. He engages the massive audience, which fills the expansive venue, their phone flashlights creating a dazzling, starry effect across the dark seating areas. Diljit, speaking in Punjabi, builds anticipation by asking the crowd, as transcribed, “In the city of Birmingham… in the middle of a room full of Punjabis… any guess who is about to come?” The crowd responds with eager shouts. The excitement escalates rapidly as Diljit exclaims, “Ed Sheeran is in the house everyone!”, a declaration that triggers a wave of thunderous applause and cheers from the ecstatic audience. The camera briefly cuts to a silhouette of a figure, presumably Ed Sheeran, making their way backstage, further amplifying the anticipation before his full appearance."
        }
      },
      {
        "video_timestamp_num": 1,
        "timestamp_start": "00:00:15",
        "timestamp_end": "00:00:44",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "ਓਏ ਐਡ ਸ਼ਰੀਨ ਪੰਜਾਬੀਓ!\\nOye Ed Sheeran, Punjabiyo!\\nOoh, aah, ooh, aah, ooh, aah\\n(Music starts: Shape of You / Naina Da Kehna Mashup)\\nOh, aah, oh, aah, oh, aah\\nNaina Da Kehna\\nOoh, aah, ooh, aah, ooh, aah\\nBaby, I'm singing it\\nOoh, aah, ooh, aah, ooh, aah\\nScream it out!\\nOoh, aah, ooh, aah, ooh, aah"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The stage is bathed in a dynamic purple light, enhancing the electrifying atmosphere. Ed Sheeran, dressed in a casual black T-shirt and dark trousers, with his acoustic guitar strapped to his back, makes his entrance. Diljit Dosanjh, still charismatic in his white attire, continues to hype the crowd, exclaiming, as per the transcript, “Oye Ed Sheeran, Punjabiyo!”, specifically acknowledging the Punjabi heritage of many in attendance. The infectious melody of the mashup, blending Ed Sheeran's globally popular “Shape of You” with Diljit Dosanjh's “Naina Da Kehna,” begins to fill the arena. The signature rhythmic chant “Ooh, aah, ooh, aah, ooh, aah” sets the energetic tone. Ed Sheeran, now front and center, actively moves around the stage, singing parts of “Shape of You” and encouraging the crowd with calls like “Baby, I'm singing it!” and “Scream it out!” White confetti begins to fall, showering the stage and the performers, adding a celebratory visual effect. The audience is visibly ecstatic, waving their arms, holding up their illuminated phones, and completely immersed in the moment, creating a vibrant sea of purple and white lights. Multiple camera angles capture the artists from various perspectives, showcasing their energetic movements and the overwhelming crowd engagement."
        }
      },
      {
        "video_timestamp_num": 2,
        "timestamp_start": "00:00:44",
        "timestamp_end": "00:01:29",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "ਨੈਣਾਂ ਦਾ ਕਹਿਣਾ\\n(My eyes are saying)\\nOh, aah, oh, aah, oh, aah\\nਨੈਣਾਂ ਦਾ ਕਹਿਣਾ\\n(My eyes are saying)\\nGirl, you know I want your love\\nYour love was handmade for somebody like me\\nCome on now, follow my lead\\nI may be crazy, don't mind me\\nSay, boy, let's not talk too much\\nGrab on my waist and put that body on me\\nCome on now, follow my lead\\nCome on now, follow my lead, come on now, follow my lead"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The mashup flows seamlessly as Diljit Dosanjh takes over the lead, singing the melodic Punjabi lines, “Naina Da Kehna” (My eyes are saying), while Ed Sheeran provides backing vocals with his characteristic “Ooh, aah” chants. The stage is still lively with dynamic lighting that pulses to the rhythm. Ed Sheeran then smoothly transitions back into the English verses of “Shape of You,” singing, as transcribed, “Girl, you know I want your love, your love was handmade for somebody like me.” He moves with a natural stage presence, strumming his guitar and engaging the vast audience. Diljit remains on stage, often in the background, but his presence is felt as he occasionally interacts with Ed Sheeran or the crowd. The confetti continues to fall, creating a magical, almost dream-like ambiance under the bright spotlights. The crowd is seen dancing and singing along, completely captivated by the unique blend of pop and Punjabi music. The continuous camera movement captures the high energy and collaborative spirit between the two globally renowned artists."
        }
      },
      {
        "video_timestamp_num": 3,
        "timestamp_start": "00:01:29",
        "timestamp_end": "00:02:10",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "I'm in love with the shape of you\\nWe push and pull like a magnet do\\nAlthough my heart is falling too\\nI'm in love with your body\\nAnd last night you were in my room\\nAnd now my bedsheets smell like you\\nEvery day discovering something brand new\\nWell, I'm in love with your body\\nਖੁਦਾ ਖੁਦਾ ਮੈਨੇ ਲਿਆ ਲਿਆ ਤੇਰਾ ਨਾਮ ਹਜ਼ਾਰਾਂ ਵਾਰੀ\\n(God, God, I've taken your name a thousand times)\\nਦਿਲ ਮੇਰਾ ਹੂਆ ਤੇਰਾ ਤੂੰ ਹੈ ਨਸ਼ਾ ਨਸ਼ਾ ਨੀ ਮੈਂ ਜਾਨ ਤੇਰੇ ਤੋਂ ਵਾਰੀ\\n(My heart became yours, you are intoxication, intoxication, I sacrifice my life for you)\\nਮੇਰੀ ਖੁਦ ਸੇ ਬੜੀ ਦੂਰੀ ਬਸ ਤੇਰੀ ਹੈ ਜੀ ਹਜ਼ੂਰੀ\\n(I am very far from myself, only your presence matters)\\nਜ਼ਮਾਨਾ ਕਿਆ ਹੀ ਸਮਝੇਗਾ ਦਿਲ ਗਵਾਣਾ ਕਿਉਂ ਜ਼ਰੂਰੀ\\n(What will the world understand? Why is it necessary to lose one's heart?)"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The performance reaches a new level of excitement with the introduction of spectacular pyrotechnics. Large flames erupt from the stage floor, creating dramatic vertical columns of fire that light up the arena. Ed Sheeran passionately sings the chorus of “Shape of You,” as quoted in the transcript, “I'm in love with the shape of you, We push and pull like a magnet do.” His energy is infectious as he moves across the stage, captivating the audience. Diljit Dosanjh then takes over, delivering powerful Punjabi vocals from “Naina Da Kehna.” His lyrics, filled with deep emotion and devotion, such as “My heart became yours, you are intoxication, intoxication, I sacrifice my life for you,” resonate through the venue. The stage lighting intensifies, bathing the artists and the falling confetti in rich, vibrant hues. The camera frequently cuts to wide shots that showcase the full scale of the production, including the impressive fire effects, and the vast, engaged audience. The combination of dynamic visuals and passionate performances creates an unforgettable sensory experience."
        }
      },
      {
        "video_timestamp_num": 4,
        "timestamp_start": "00:02:10",
        "timestamp_end": "00:03:00",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "ਨੈਣਾਂ ਦਾ ਕਹਿਣਾ ਨੀ ਅਸੀਂ ਤੇਰਾ ਮੁੱਖੜਾ ਦੇਖਦੇ ਰਹਿਣਾ ਨੀ\\n(My eyes are saying, we will keep looking at your face)\\nਤੂੰ ਤੇ ਮੇਰੀ ਹੈ ਨਾ ਇਸ਼ਕ ਦੇ ਇਤਰ ਨੇ ਰੂਹ ਤੋਂ ਲੈਣਾ\\n(You are mine, the perfume of love will come from your soul)\\nਨੈਣਾਂ ਦਾ ਕਹਿਣਾ ਨੀ ਅਸੀਂ ਤੇਰਾ ਮੁੱਖੜਾ ਦੇਖਦੇ ਰਹਿਣਾ ਨੀ\\n(My eyes are saying, we will keep looking at your face)\\nOoh, aah, ooh, aah, ooh, aah\\nGirl, you know I want your love\\nYour love was handmade for somebody like me\\nCome on now, follow my lead\\nI may be crazy, don't mind me\\nSay, boy, let's not talk too much\\nGrab on my waist and put that body on me\\nCome on now, follow my lead"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The performance continues with seamless transitions between Diljit Dosanjh's Punjabi verses and Ed Sheeran's English lyrics, creating a harmonious mashup. Diljit sings, as transcribed, “Naina Da Kehna, ni asi tera mukhda dekhde rehna ni” (My eyes are saying, we will keep looking at your face), expressing profound admiration, while Ed Sheeran supports with his signature vocalizations and guitar riffs. The stage remains vibrant with dynamic lighting, casting a purple glow over the falling confetti. The camera captures wide shots of both artists moving energetically across the stage, engaging with different sections of the immense crowd. Close-ups show their expressions of joy and enthusiasm. The audience is visibly thrilled, with many holding up their phones to record, their lights twinkling like a vast, immersive backdrop. The collaboration between the two artists is natural and fluid, captivating everyone in the arena and highlighting the successful blend of their distinct musical genres."
        }
      },
      {
        "video_timestamp_num": 5,
        "timestamp_start": "00:03:00",
        "timestamp_end": "00:04:15",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "Oh, aah, oh, aah, oh, aah\\nGirl, you know I want your love\\nYour love was handmade for somebody like me\\nCome on now, follow my lead\\nI may be crazy, don't mind me\\nSay, boy, let's not talk too much\\nGrab on my waist and put that body on me\\nCome on now, follow my lead\\nCome on now, follow my lead\\n(Confetti and pyro effects)\\nLast night you were in my room\\nAnd now my bedsheets smell like you\\nEvery day discovering something brand new\\nWell, I'm in love with your body\\nਨੈਣਾਂ ਦਾ ਕਹਿਣਾ ਨੀ ਅਸੀਂ ਤੇਰਾ ਮੁੱਖੜਾ ਦੇਖਦੇ ਰਹਿਣਾ ਨੀ\\n(My eyes are saying, we will keep looking at your face)\\nਤੂੰ ਤੇ ਮੇਰੀ ਹੈ ਨਾ ਇਸ਼ਕ ਦੇ ਇਤਰ ਨੇ ਰੂਹ ਤੋਂ ਲੈਣਾ ਨੀ\\n(You are mine, the perfume of love will come from your soul)"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The performance intensifies with more dazzling visual effects. Bursts of white smoke and dramatic pyrotechnics shoot up from the stage, creating striking plumes that add to the concert's excitement. Ed Sheeran, still playing his acoustic guitar and singing, moves around with high energy, his red hair prominent under the bright spotlights. Diljit Dosanjh mirrors his energy, dancing and gesturing to the crowd, inviting more participation. The atmosphere is vibrant, with confetti continuing to fall, adding a festive layer to the scene. The audience is shown with their hands raised, singing along and recording the memorable collaboration. The dynamic camera work captures both close-up shots of the artists and wide views of the electrified crowd, showcasing their synchronized movements and the overall spectacle of the event. The seamless blend of their distinct musical styles creates a captivating and immersive experience for everyone present."
        }
      },
      {
        "video_timestamp_num": 6,
        "timestamp_start": "00:04:15",
        "timestamp_end": "00:05:03",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "Well, I'm in love with your body\\nਨੈਣਾਂ ਦਾ ਕਹਿਣਾ ਨੀ ਅਸੀਂ ਤੇਰਾ ਮੁੱਖੜਾ ਦੇਖਦੇ ਰਹਿਣਾ ਨੀ\\n(My eyes are saying, we will keep looking at your face)\\nਤੂੰ ਤੇ ਮੇਰੀ ਹੈ ਨਾ ਇਸ਼ਕ ਦੇ ਇਤਰ ਨੇ ਰੂਹ ਤੋਂ ਲੈਣਾ ਨੀ\\n(You are mine, the perfume of love will come from your soul)\\nਨੈਣਾਂ ਦਾ ਕਹਿਣਾ ਨੀ ਅਸੀਂ ਤੇਰਾ ਮੁੱਖੜਾ ਦੇਖਦੇ ਰਹਿਣਾ ਨੀ\\n(My eyes are saying, we will keep looking at your face)\\nਤੂੰ ਤੇ ਮੇਰੀ ਹੈ ਨਾ ਇਸ਼ਕ ਦੇ ਇਤਰ ਨੇ ਰੂਹ ਤੋਂ ਲੈਣਾ ਨੀ\\n(You are mine, the perfume of love will come from your soul)\\nਨੈਣਾਂ ਦਾ ਕਹਿਣਾ\\n(My eyes are saying)\\n(Crowd cheers, applause, music fades slightly)\\nThrow your hands in the air, clap!\\nCome on, my baby, my baby, come on\\nCome on, my baby, my baby, come on\\nCome on, my baby, my baby, come on\\nCome on, my baby, my baby, come on\\nCome on, my baby, my baby, come on\\nCome on, my baby, my baby, come on\\nWell, I'm in love with the shape of you\\nWe push and pull like a magnet do\\nAlthough my heart is falling too\\nI'm in love with your body\\n(Loud cheers and applause)"
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "As the performance draws to a close, the energy remains incredibly high. More confetti rains down, creating a festive atmosphere under the bright, sweeping spotlights. Diljit Dosanjh continues to sing his heartfelt Punjabi lyrics from “Naina Da Kehna,” expressing poetic devotion. Ed Sheeran, on the other hand, keeps the crowd energized, encouraging them to \"Throw your hands in the air, clap!\" and sing along to “Come on, my baby.” The camera shows various shots of the excited audience, hands waving and phones recording, captivated by the spectacle. In a memorable and touching moment, both artists sit down on the edge of the stage, facing the vast crowd, a gesture that brings an intimate feeling to the large arena. They continue to sing their respective parts of the mashup, creating a powerful fusion of their voices and cultures. As the song concludes, they stand up, approach each other, and share a warm, heartfelt embrace, symbolizing the success of their collaboration. The audience erupts in thunderous applause and cheers, acknowledging the extraordinary performance and the genuine camaraderie between the two global stars. The video ends with both artists acknowledging the crowd and walking off stage amidst the roaring ovation."
        }
      }
    ]
  },
  {
    "video_name": "5 ways to shoot yourself in the foot with C - Fireship 720p, h264 - Copy.mp4",
    "video_id": 2,
    "video_info_available": 1,
    "video_content": [
      {
        "video_timestamp_num": 0,
        "timestamp_start": "00:00:00",
        "timestamp_end": "00:00:38",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "ISO/IEC 9899 is arguably the most important document in the history of humankind. More significant than the Magna Carta, has built more wealth than Satoshi's Bitcoin white paper, and is even more sacred than the moon landing telemetry data which was lost by NASA. This document is the official spec for the C programming language. The mother of almost all modern languages like C++, C#, Java, JavaScript, Python, and is also the foundation for operating systems, compilers, encryption tools, game engines, and smart toilets. It's a simple, humble language that built the world, but sometimes it also likes to destroy the world. In today's video, we'll look at five simple code examples of memory management in C."
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The video opens with a silhouetted figure standing against a bright, warm light, with the text **'ISO/IEC 9899'** prominently displayed. The speaker immediately establishes the profound importance of this standard, stating it's 'arguably the most important document in the history of humankind.' This statement is comically exaggerated for effect, as he compares its significance to historical documents like the Magna Carta, the Bitcoin white paper, and even the lost Apollo 11 moon landing telemetry data, all while displaying images of these historical artifacts. The tone is light-hearted and slightly sarcastic, yet conveys a genuine appreciation for the subject. \\n\\nHe then reveals that ISO/IEC 9899 is the **official specification for the C programming language**. He emphasizes C's foundational role in modern computing, visually illustrating its influence with logos of other popular programming languages like C++, C#, Java, JavaScript, and Python, encircling a classical painting of a woman, symbolizing C as the 'mother' language. The visual then shifts to show various applications built on C, including the Linux penguin representing operating systems, binary code for compilers, the Unreal Engine logo for game engines, and even a futuristic smart toilet, highlighting C's pervasive presence in technology, from core systems to seemingly mundane devices.\\n\\nThe speaker describes C as a 'simple, humble language that built the world,' but quickly adds with a touch of dramatic irony that 'sometimes it also likes to destroy the world.' This is visually represented by a spinning globe, which is then violently shattered by an unseen force, emphasizing the potential for destructive bugs in C. The segment concludes by announcing the video's focus: 'five simple code examples of memory management in C,' setting the stage for a practical and insightful discussion on C's notorious challenges."
        }
      },
      {
        "video_timestamp_num": 1,
        "timestamp_start": "00:00:38",
        "timestamp_end": "01:23:717",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "Five code examples that go hard. Code that's cost companies billions of dollars and put programmers in jail. But you might be saying to yourself, wait a minute, I'm just a sway dev who relies on garbage collection and this is above my paygrade. Well, actually, memory management in C is something you can learn in 30 seconds. C forces you to grow up and manage memory by yourself. That means if you want to put some data into the computer's RAM, you allocate some bytes with the `malloc` function. It returns a memory address that looks like this, which you can then access in your code using a pointer, which itself is just a variable that points to a memory address. And now we can start putting crap in it. But every `malloc` also needs a `free`, which will release the memory when you're done with it. That's pretty much all there is to it, and it didn't even take 30 seconds to master it. But with great power comes a million different ways to shoot yourself in the foot. Like don't call free twice, never use freed memory, don't call free after midnight, and definitely don't forget to do bounds checking."
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The speaker continues, asserting that the upcoming code examples are 'five code examples that go hard,' implying they are significant and impactful. He humorously claims these code issues have 'cost companies billions of dollars and put programmers in jail,' highlighting the severe real-world consequences of C memory bugs. He then addresses a hypothetical 'sway dev' (software developer) who relies on garbage collection in other languages, suggesting that C's manual memory management might seem daunting or 'above their paygrade.'\\n\\nTransitioning to a rapid-fire explanation, the video declares that C memory management can be learned in '30 seconds.' A countdown timer appears, starting from 30 seconds. The visual shows a hand inserting a RAM stick into a slot, symbolizing memory allocation. The speaker explains that C requires manual memory management. To put data into RAM, one uses the `malloc` function. A code snippet is displayed: `char *buffer = malloc(100);` The speaker clarifies that `malloc` returns a memory address (e.g., `0x7ffe5367e069`), which is accessed via a pointer—a variable that stores a memory address. An animated yellow hand points to `*buffer` in the code, then to the hexadecimal memory address. The speaker humorously says, 'And now we can start putting crap in it,' showing `strcpy(buffer, "
        }
      },
      {
        "video_timestamp_num": 2,
        "timestamp_start": "00:01:23",
        "timestamp_end": "00:02:59",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "One of the first large-scale attacks on the internet was the Morris Worm. In 1988, it took out about 6,000 machines, which at the time was 10% of the internet. And it was able to do that because libraries like `fingered` and `sendmail` had code that looked similar to this. Here we have a buffer with 512 bytes. Then we put some data into it, but the problem is we're not checking the size, which could result in a buffer overflow. This allowed the worm to overwrite return addresses on the stack, allowing for arbitrary code execution. That's because C doesn't automatically perform bounds checking. And if you try to do something like access an array out of bounds, it leads to undefined behavior. But this can be fixed in a variety of ways, with the most simple approach being a conditional statement. The creator of the Morris Worm almost ended up in prison, but it's nowhere near as bad as Heartbleed in 2014. OpenSSL used an extension called Heartbeat, which was designed to keep a connection between a client and server alive. What's supposed to happen on a normal heartbeat is the client sends a message like, I'm sending five bytes with the message hello. Then the server will echo back, hello."
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The video introduces the first major vulnerability: **Bad Bounds Checking**, marked by '1. BAD BOUNDS CHECKING' in bold pink text. The speaker recounts the historical **Morris Worm** attack from 1988, showing a picture of Robert Tappan Morris and a display about the worm's source code at a museum. He states the worm disabled approximately 6,000 machines, representing 10% of the internet at the time. The attack leveraged vulnerabilities in libraries like `fingerd` and `sendmail`. \\n\\nThe video then presents a simplified C code example to illustrate the vulnerability. A `vulnerable_function` is shown with a `char buffer[8];` (initially stated as 512 bytes verbally, but visually corrected to 8 bytes later by an animated pointer, indicating a small buffer size for demonstration). The function uses `strcpy(buffer, input);` to copy data into the buffer. The speaker explains the critical flaw: no size checking on the input. This oversight can lead to a **buffer overflow**, where input larger than 8 bytes overwrites adjacent memory. The visual shows a hex dump, with data appearing to overflow and overwrite other sections, signifying the memory corruption. \\n\\nThis vulnerability, as explained, allowed the Morris Worm to **overwrite return addresses on the stack**, enabling **arbitrary code execution**. The speaker emphasizes that C **does not automatically perform bounds checking**, unlike some other languages. If a program attempts to access an array out of its defined bounds, it results in 'undefined behavior,' which could lead to crashes or, as in the Morris Worm's case, exploits. The video shows a terminal demonstrating this: running `./bounds thisisnotgoingtoendwell` results in a 'trace trap' error. The speaker then shows a simple fix for `strcpy` by adding `sizeof(buffer) - 1` as a third argument, implying `strncpy` or similar functions should be used, but notes there are 'many ways to fix' such issues. He mentions the Morris Worm creator 'almost ended up in prison.'\\n\\nNext, the video transitions to the second major vulnerability: **Heartbleed**, appearing as '2. HEARTBLEED BOUNDS CHECK'. It shows a man clutching his chest as if experiencing a heart attack, humorously depicting the name. The Heartbleed bug, discovered in 2014, affected OpenSSL, a widely used cryptography toolkit. The explanation details how OpenSSL's Heartbeat extension, designed to keep client-server connections alive, worked. A client would send a message (e.g., 'hello' with 5 bytes), and the server would echo it back."
        }
      },
      {
        "video_timestamp_num": 3,
        "timestamp_start": "00:02:59",
        "timestamp_end": "00:03:49",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "But another way to mess up C code is to use memory after it's been freed. And that's exactly what happened to Internet Explorer in 2013. The C code looks like this, where you allocate some memory, free it, and then try to use it again somewhere later in the code. In this case, the code lived in Internet Explorer 8 and was meant to free up memory when JavaScript code would remove elements from an HTML page. However, the pointer to the freed object still exists in Internet Explorer's internal structure, and that allowed attackers to set up malicious websites that could take control of your system by doing nothing more than visiting a website. That's not good, but when working with C, it's also important to know how to count properly. Because being off by one can lead to catastrophic results. In this code example, we're using a function from the C standard library to append some values to a string. But because we didn't take into account a null terminating character, we're going to get yet another buffer overflow."
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The speaker introduces the third vulnerability: **Use After Free**, displayed as '3. USE AFTER FREE' in pink text. This bug occurs when a program attempts to access memory that has already been deallocated (freed). The video highlights the **Internet Explorer vulnerability in 2013** as a prime example, showing a vintage computer screen displaying the Internet Explorer 'e' logo. \\n\\nA C code snippet demonstrates this: a `process_element` function allocates memory using `malloc(sizeof(Element))`, then immediately `free(elem);`. However, later in the same function, under `if (some_condition)`, the code tries to access the freed memory with `elem->value = 69;`. An animated hand points to this line, with the text 'BAD MOVE' appearing, visually indicating the error. The speaker explains that this specific code in Internet Explorer 8 was designed to free memory when JavaScript removed HTML elements. The critical flaw was that even after the memory was freed, the pointer (`*ptr` in the visual, pointing to the `</main>` HTML tag) to that freed object still existed within Internet Explorer's internal structure. This allowed malicious websites to exploit this 'use after free' vulnerability, potentially taking control of a user's system simply by being visited.\\n\\nThe video then transitions to the fourth type of error: **Off-By-One** errors, displayed as '4. OFF-BY-ONE' in pink text, with a man making a gesture of counting with his fingers. The speaker warns that being 'off by one' can lead to 'catastrophic results.' A C code example `offbyone()` is shown. It declares two character arrays, `str1[] = "
        }
      },
      {
        "video_timestamp_num": 4,
        "timestamp_start": "00:03:49",
        "timestamp_end": "00:04:18",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "And finally, that brings us to double free. In this code here, you'll notice that we're freeing the same memory twice in two different parts of the program. Freeing memory twice may not sound like a big deal, but it leads to undefined behavior. At which point your code sucks and all bets are off. Your program might work fine, it might crash, or it could allow attackers to write arbitrary values in memory. As you can see, C can be dangerous, but it's the foundation for all sorts of amazing software, like everybody's favorite SQL database, Postgres. And that's why you need to know about Gel, the sponsor of today's video."
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The video introduces the fifth and final vulnerability: **Double Free**, indicated by '5. DOUBLE FREE' in pink text, overlaid on a visual of the unsettling twin girls from The Shining, humorously implying a repetitive and dangerous action. The speaker explains that a double free occurs when the same block of memory is deallocated twice. \\n\\nThe C code example shows a `cleanup_user_data` function that frees `u->groups` if it exists. Below it, the `process_user` function calls `cleanup_user_data(&u);` once, and then, inside an `if (error_condition)` block, calls it *again*. An animated yellow hand points to both `cleanup_user_data(&u);` calls, emphasizing that the same memory is being freed twice. The speaker warns that while 'freeing memory twice may not sound like a big deal,' it also leads to 'undefined behavior.' He humorously states that 'at which point your code sucks and all bets are off,' meaning the program's behavior becomes unpredictable. It might function normally, crash, or, most critically, 'allow attackers to write arbitrary values in memory,' leading to potential exploits. The visual quickly flashes with static noise and glitches over the code, emphasizing the unpredictable nature of undefined behavior.\\n\\nThe speaker then transitions to a concluding thought, with the phrase 'AS YOU CAN C' (a pun on 'see' and 'C' language) on a black screen. He acknowledges that 'C can be dangerous,' but immediately adds that 'it's the foundation for all sorts of amazing software.' This is illustrated by a popular internet meme showing an astronaut pointing a gun at another astronaut, with the caption 'Wait. is it all just C?' and the first astronaut responding 'Always has been.' Various programming language logos (Java, Python, R, C++, C#) are shown on a 'planet' in the background, reinforcing C's foundational role. The speaker specifically mentions 'everybody's favorite SQL database, Postgres,' with its elephant logo appearing. This serves as a lead-in to the video's sponsor."
        }
      },
      {
        "video_timestamp_num": 5,
        "timestamp_start": "00:04:18",
        "timestamp_end": "00:04:59",
        "timestamp_transcript_content": {
          "content_type": "text",
          "content": "A next-gen Postgres database platform that lets you model your data with simple types instead of tables. Not only is it more natural to work with, but it also provides total type safety, graph-like modeling, and painless schema migrations. Gel's type safe query builder gives you all the power of SQL, but with modern tooling that makes it feel like you're programming in 2025, not 2005. You can use their next JS starter template like I'm doing here to get up and running in just a few minutes, and you can use their built-in auth and AI solutions to add more advanced features over time. Try out Gel with the link below to get started today. Thanks for watching and I will see you in the next one."
        },
        "timestamp_description_content": {
          "content_type": "text",
          "content": "The video introduces **Gel** (www.geldata.com), the sponsor. The logo for Gel, a stylized 'gel' wordmark, appears on screen. The speaker describes Gel as a 'next-gen Postgres database platform.' He highlights its key features: it allows users to 'model your data with simple types instead of tables.' The visual shows a code editor (VS Code) displaying a `db/schema/default.gel` file with type definitions like `type File extending Timestamped` and `type Folder extending Timestamped`, demonstrating how data is structured using types rather than traditional SQL tables. An animated arrow points to the `type File` definition, and text 'TYPES NOT TABLES' appears, emphasizing this key differentiation. \\n\\nThe speaker elaborates on the benefits: it's 'more natural to work with,' provides 'total type safety' (shown with VS Code's intelligent auto-completion for object properties like `id`, `name`, `createdAt`, `url`, etc.), offers 'graph-like modeling,' and 'painless schema migrations.' He claims Gel's 'type-safe query builder gives you all the power of SQL, but with modern tooling that makes it feel like you're programming in 2025, not 2005.' The interface of Gel Cloud is shown, demonstrating a query builder with tabs for 'EdgeQL Builder' and 'SQL,' displaying query results in a table format. Another view of the Gel Cloud shows schema definitions and a visual graph representation of relationships between 'Folder' and 'File' types, illustrating the 'graph-like modeling.'\\n\\nFinally, the speaker encourages viewers to try Gel, mentioning their Next.js starter template for quick setup and built-in authentication ('auth') and AI solutions for advanced features. The screen shows a 'Gel Quickstart Tutorial' page. The video concludes with the Gel logo and website (`www.geldata.com`), with the speaker thanking viewers and signing off."
        }
      }
    ]
  }
]